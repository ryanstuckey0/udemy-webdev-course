body {
    padding: 0;
    margin: 0;
}

.divider {
    height: 1vh;
    background-color: black;
}

/* when there are more columns x rows than elements, the next elements will continue to fill in */
#container-4 {
    display: grid;
    grid-template: 1fr 1fr / 1fr 1fr 1fr;
    width: 200px;
    height: 18vh;
}

#container-4>.element-even {
    width: 100%;
    aspect-ratio: 1/1;
    background-color: blue;
}

#container-4>.element-odd {
    width: 100%;
    aspect-ratio: 1/1;
    background-color: purple;
}

/* when there are more elements than columns x rows, we can set the grid-auto property */
#container-16 {
    display: grid;
    grid-template: repeat(10, 1fr) / repeat(4, 1fr);
    width: 50%;
    height: 80vh;
    gap: 10px;
    grid-auto-rows: 30px;
}

#container-16>.element-even {
    background-color: #0000FF90;
}

#container-16>.element-odd {
    background-color: #80008090;
}

/* notice how this element now spans 2 columns */
#container-16>.span1 {
    grid-column: span 2;
}

/* and this element now spans 2 rows */
#container-16>.span2 {
    grid-row: span 2;
}

#container-16>.span3 {
    /* grid-row and grid-column are shorthand for two other poperties */
    /* additionally, we can also use numbers to specify exactly where stretched grid cells end */
    grid-row-start: 2;
    grid-row-end: 5;

    grid-column-start: 1;
    grid-column-end: 4;

    /* or we can use the below shorthand to say the same thing */
    grid-area: 2/1/5/4;
}

#container-16>.span4 {
    /* can also use negatives values to specify lines starting from right side */
    /* 1 will be the leftmost column */
    /* -1 will be the rightmost column */
    /* same goes for rows */
    /* can also switch start and end so the span goes in reverse */
    grid-row: span 2;
    grid-column: 2 / -1;
}

/* can also specify order; same behavior as flex box */
#container-16>.order1 {
    order: -1;
}

/* can also overlap items */
.span5 {
    grid-area: 4 / 1 / 6 / 3;
}

.text,
#container-16>div {
    font-weight: bold;
    font-size: 150%;
    display: flex;
    justify-content: center;
    align-items: center;
}